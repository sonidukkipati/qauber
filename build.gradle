apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
     mavenCentral()
}

//To switch to old version of Selenium read this - 
// http://navyuginfo.com/selenium-3-0-resolved-firefox-compatibility-issues/

configurations.all {
    // Check for updates every build
    //http://stackoverflow.com/questions/13565082/how-can-i-force-gradle-to-redownload-dependencies
    //Erik - this doesn't work very well
    //resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
 	// Check for updates every build
    //http://stackoverflow.com/questions/13565082/how-can-i-force-gradle-to-redownload-dependencies
    //Erik - this doesn't work at all...
 	//compile('group:projectA:1.0-SNAPSHOT') { changing = true }
 	
    compile 'mysql:mysql-connector-java:5.1.29'
    compile "org.testng:testng:6.8.7"
    compile("org.uncommons:reportng:1.1.2") {
        exclude group: "org.testng", module: "testng"
    }
    compile "com.jcraft:jsch:0.1.44-1"
    //compile 'org.seleniumhq.selenium:selenium-java:2.5.3'
    //compile "org.seleniumhq.selenium:selenium-java:3.0.1"
    compile 'org.seleniumhq.selenium:selenium-java:3.0.1'
    //compile "org.seleniumhq.selenium:selenium-firefox-driver:3.0.1"
    
    compile "javax.servlet:servlet-api:2.5"
    compile "net.sourceforge.jexcelapi:jxl:2.6.12"
}

version = '1.0'

jar {
     manifest.attributes provider: 'gradle'
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'org.testng.TestNG'
    args = ['build/resources/main/testng.xml'].toList()
    classpath configurations.runtime
    classpath sourceSets.main.output
}
